plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.fine'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'junit:junit:4.12'
    implementation 'junit:junit:4.12'
    compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.7.RELEASE'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'io.jsonwebtoken:jjwt-api:0.10.7'
    runtime 'io.jsonwebtoken:jjwt-impl:0.10.7'
    runtime 'io.jsonwebtoken:jjwt-jackson:0.10.7'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'
    compile 'org.apache.httpcomponents:httpclient:4.5.8'
    compile group: 'javax.validation', name: 'validation-api'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    // jpa
    compile "org.mariadb.jdbc:mariadb-java-client:2.4.3"

    // model mapper
    compile 'org.modelmapper:modelmapper:2.3.1'
    // apache common io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'com.auth0', name: 'java-jwt', version: '3.10.2'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'


    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile group: 'org.springframework.security', name: 'spring-security-test'
}

bootRun {
    // jvm options
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }

    // arguments
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}

test {
    useJUnitPlatform()
}
